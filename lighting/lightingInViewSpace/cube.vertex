#version 330

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 textCoord;
layout(location = 2) in vec3 normal;

out vec3 FragPos;
out vec2 TextCoord;
out vec3 FragNormal;
out vec3 LightPos;

uniform mat4 projection;
uniform mat4 view;
uniform mat4 model;
uniform vec3 lightPos;

void main()
{
	gl_Position = projection * view * model * vec4(position, 1.0);
	FragPos = vec3(view * model * vec4(position, 1.0));	  // 在相机坐标系中指定片元位置 
	LightPos = vec3(view * vec4(lightPos, 1.0)); //  在相机坐标系中指定光源位置
	TextCoord = textCoord;
	mat3 normalMatrix = mat3(transpose(inverse(view * model)));
	FragNormal = normalMatrix * normal; // 计算法向量经过MV变换后值
}